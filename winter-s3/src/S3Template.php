<?php
declare(strict_types=1);

namespace dev\winterframework\s3;

use Aws\Result;
use Aws\S3\S3Client;
use GuzzleHttp\Promise\Promise;
use Psr\Http\Message\RequestInterface;

/**
 * @method Result abortMultipartUpload(array $args = [])
 * @method Promise abortMultipartUploadAsync(array $args = [])
 * @method Result completeMultipartUpload(array $args = [])
 * @method Promise completeMultipartUploadAsync(array $args = [])
 * @method Result copyObject(array $args = [])
 * @method Promise copyObjectAsync(array $args = [])
 * @method Result createBucket(array $args = [])
 * @method Promise createBucketAsync(array $args = [])
 * @method Result createMultipartUpload(array $args = [])
 * @method Promise createMultipartUploadAsync(array $args = [])
 * @method Result deleteBucket(array $args = [])
 * @method Promise deleteBucketAsync(array $args = [])
 * @method Result deleteBucketAnalyticsConfiguration(array $args = [])
 * @method Promise deleteBucketAnalyticsConfigurationAsync(array $args = [])
 * @method Result deleteBucketCors(array $args = [])
 * @method Promise deleteBucketCorsAsync(array $args = [])
 * @method Result deleteBucketEncryption(array $args = [])
 * @method Promise deleteBucketEncryptionAsync(array $args = [])
 * @method Result deleteBucketIntelligentTieringConfiguration(array $args = [])
 * @method Promise deleteBucketIntelligentTieringConfigurationAsync(array $args = [])
 * @method Result deleteBucketInventoryConfiguration(array $args = [])
 * @method Promise deleteBucketInventoryConfigurationAsync(array $args = [])
 * @method Result deleteBucketLifecycle(array $args = [])
 * @method Promise deleteBucketLifecycleAsync(array $args = [])
 * @method Result deleteBucketMetricsConfiguration(array $args = [])
 * @method Promise deleteBucketMetricsConfigurationAsync(array $args = [])
 * @method Result deleteBucketOwnershipControls(array $args = [])
 * @method Promise deleteBucketOwnershipControlsAsync(array $args = [])
 * @method Result deleteBucketPolicy(array $args = [])
 * @method Promise deleteBucketPolicyAsync(array $args = [])
 * @method Result deleteBucketReplication(array $args = [])
 * @method Promise deleteBucketReplicationAsync(array $args = [])
 * @method Result deleteBucketTagging(array $args = [])
 * @method Promise deleteBucketTaggingAsync(array $args = [])
 * @method Result deleteBucketWebsite(array $args = [])
 * @method Promise deleteBucketWebsiteAsync(array $args = [])
 * @method Result deleteObject(array $args = [])
 * @method Promise deleteObjectAsync(array $args = [])
 * @method Result deleteObjectTagging(array $args = [])
 * @method Promise deleteObjectTaggingAsync(array $args = [])
 * @method Result deleteObjects(array $args = [])
 * @method Promise deleteObjectsAsync(array $args = [])
 * @method Result deletePublicAccessBlock(array $args = [])
 * @method Promise deletePublicAccessBlockAsync(array $args = [])
 * @method Result getBucketAccelerateConfiguration(array $args = [])
 * @method Promise getBucketAccelerateConfigurationAsync(array $args = [])
 * @method Result getBucketAcl(array $args = [])
 * @method Promise getBucketAclAsync(array $args = [])
 * @method Result getBucketAnalyticsConfiguration(array $args = [])
 * @method Promise getBucketAnalyticsConfigurationAsync(array $args = [])
 * @method Result getBucketCors(array $args = [])
 * @method Promise getBucketCorsAsync(array $args = [])
 * @method Result getBucketEncryption(array $args = [])
 * @method Promise getBucketEncryptionAsync(array $args = [])
 * @method Result getBucketIntelligentTieringConfiguration(array $args = [])
 * @method Promise getBucketIntelligentTieringConfigurationAsync(array $args = [])
 * @method Result getBucketInventoryConfiguration(array $args = [])
 * @method Promise getBucketInventoryConfigurationAsync(array $args = [])
 * @method Result getBucketLifecycle(array $args = [])
 * @method Promise getBucketLifecycleAsync(array $args = [])
 * @method Result getBucketLifecycleConfiguration(array $args = [])
 * @method Promise getBucketLifecycleConfigurationAsync(array $args = [])
 * @method Result getBucketLocation(array $args = [])
 * @method Promise getBucketLocationAsync(array $args = [])
 * @method Result getBucketLogging(array $args = [])
 * @method Promise getBucketLoggingAsync(array $args = [])
 * @method Result getBucketMetricsConfiguration(array $args = [])
 * @method Promise getBucketMetricsConfigurationAsync(array $args = [])
 * @method Result getBucketNotification(array $args = [])
 * @method Promise getBucketNotificationAsync(array $args = [])
 * @method Result getBucketNotificationConfiguration(array $args = [])
 * @method Promise getBucketNotificationConfigurationAsync(array $args = [])
 * @method Result getBucketOwnershipControls(array $args = [])
 * @method Promise getBucketOwnershipControlsAsync(array $args = [])
 * @method Result getBucketPolicy(array $args = [])
 * @method Promise getBucketPolicyAsync(array $args = [])
 * @method Result getBucketPolicyStatus(array $args = [])
 * @method Promise getBucketPolicyStatusAsync(array $args = [])
 * @method Result getBucketReplication(array $args = [])
 * @method Promise getBucketReplicationAsync(array $args = [])
 * @method Result getBucketRequestPayment(array $args = [])
 * @method Promise getBucketRequestPaymentAsync(array $args = [])
 * @method Result getBucketTagging(array $args = [])
 * @method Promise getBucketTaggingAsync(array $args = [])
 * @method Result getBucketVersioning(array $args = [])
 * @method Promise getBucketVersioningAsync(array $args = [])
 * @method Result getBucketWebsite(array $args = [])
 * @method Promise getBucketWebsiteAsync(array $args = [])
 * @method Result getObject(array $args = [])
 * @method Promise getObjectAsync(array $args = [])
 * @method Result getObjectAcl(array $args = [])
 * @method Promise getObjectAclAsync(array $args = [])
 * @method Result getObjectLegalHold(array $args = [])
 * @method Promise getObjectLegalHoldAsync(array $args = [])
 * @method Result getObjectLockConfiguration(array $args = [])
 * @method Promise getObjectLockConfigurationAsync(array $args = [])
 * @method Result getObjectRetention(array $args = [])
 * @method Promise getObjectRetentionAsync(array $args = [])
 * @method Result getObjectTagging(array $args = [])
 * @method Promise getObjectTaggingAsync(array $args = [])
 * @method Result getObjectTorrent(array $args = [])
 * @method Promise getObjectTorrentAsync(array $args = [])
 * @method Result getPublicAccessBlock(array $args = [])
 * @method Promise getPublicAccessBlockAsync(array $args = [])
 * @method Result headBucket(array $args = [])
 * @method Promise headBucketAsync(array $args = [])
 * @method Result headObject(array $args = [])
 * @method Promise headObjectAsync(array $args = [])
 * @method Result listBucketAnalyticsConfigurations(array $args = [])
 * @method Promise listBucketAnalyticsConfigurationsAsync(array $args = [])
 * @method Result listBucketIntelligentTieringConfigurations(array $args = [])
 * @method Promise listBucketIntelligentTieringConfigurationsAsync(array $args = [])
 * @method Result listBucketInventoryConfigurations(array $args = [])
 * @method Promise listBucketInventoryConfigurationsAsync(array $args = [])
 * @method Result listBucketMetricsConfigurations(array $args = [])
 * @method Promise listBucketMetricsConfigurationsAsync(array $args = [])
 * @method Result listBuckets(array $args = [])
 * @method Promise listBucketsAsync(array $args = [])
 * @method Result listMultipartUploads(array $args = [])
 * @method Promise listMultipartUploadsAsync(array $args = [])
 * @method Result listObjectVersions(array $args = [])
 * @method Promise listObjectVersionsAsync(array $args = [])
 * @method Result listObjects(array $args = [])
 * @method Promise listObjectsAsync(array $args = [])
 * @method Result listObjectsV2(array $args = [])
 * @method Promise listObjectsV2Async(array $args = [])
 * @method Result listParts(array $args = [])
 * @method Promise listPartsAsync(array $args = [])
 * @method Result putBucketAccelerateConfiguration(array $args = [])
 * @method Promise putBucketAccelerateConfigurationAsync(array $args = [])
 * @method Result putBucketAcl(array $args = [])
 * @method Promise putBucketAclAsync(array $args = [])
 * @method Result putBucketAnalyticsConfiguration(array $args = [])
 * @method Promise putBucketAnalyticsConfigurationAsync(array $args = [])
 * @method Result putBucketCors(array $args = [])
 * @method Promise putBucketCorsAsync(array $args = [])
 * @method Result putBucketEncryption(array $args = [])
 * @method Promise putBucketEncryptionAsync(array $args = [])
 * @method Result putBucketIntelligentTieringConfiguration(array $args = [])
 * @method Promise putBucketIntelligentTieringConfigurationAsync(array $args = [])
 * @method Result putBucketInventoryConfiguration(array $args = [])
 * @method Promise putBucketInventoryConfigurationAsync(array $args = [])
 * @method Result putBucketLifecycle(array $args = [])
 * @method Promise putBucketLifecycleAsync(array $args = [])
 * @method Result putBucketLifecycleConfiguration(array $args = [])
 * @method Promise putBucketLifecycleConfigurationAsync(array $args = [])
 * @method Result putBucketLogging(array $args = [])
 * @method Promise putBucketLoggingAsync(array $args = [])
 * @method Result putBucketMetricsConfiguration(array $args = [])
 * @method Promise putBucketMetricsConfigurationAsync(array $args = [])
 * @method Result putBucketNotification(array $args = [])
 * @method Promise putBucketNotificationAsync(array $args = [])
 * @method Result putBucketNotificationConfiguration(array $args = [])
 * @method Promise putBucketNotificationConfigurationAsync(array $args = [])
 * @method Result putBucketOwnershipControls(array $args = [])
 * @method Promise putBucketOwnershipControlsAsync(array $args = [])
 * @method Result putBucketPolicy(array $args = [])
 * @method Promise putBucketPolicyAsync(array $args = [])
 * @method Result putBucketReplication(array $args = [])
 * @method Promise putBucketReplicationAsync(array $args = [])
 * @method Result putBucketRequestPayment(array $args = [])
 * @method Promise putBucketRequestPaymentAsync(array $args = [])
 * @method Result putBucketTagging(array $args = [])
 * @method Promise putBucketTaggingAsync(array $args = [])
 * @method Result putBucketVersioning(array $args = [])
 * @method Promise putBucketVersioningAsync(array $args = [])
 * @method Result putBucketWebsite(array $args = [])
 * @method Promise putBucketWebsiteAsync(array $args = [])
 * @method Result putObject(array $args = [])
 * @method Promise putObjectAsync(array $args = [])
 * @method Result putObjectAcl(array $args = [])
 * @method Promise putObjectAclAsync(array $args = [])
 * @method Result putObjectLegalHold(array $args = [])
 * @method Promise putObjectLegalHoldAsync(array $args = [])
 * @method Result putObjectLockConfiguration(array $args = [])
 * @method Promise putObjectLockConfigurationAsync(array $args = [])
 * @method Result putObjectRetention(array $args = [])
 * @method Promise putObjectRetentionAsync(array $args = [])
 * @method Result putObjectTagging(array $args = [])
 * @method Promise putObjectTaggingAsync(array $args = [])
 * @method Result putPublicAccessBlock(array $args = [])
 * @method Promise putPublicAccessBlockAsync(array $args = [])
 * @method Result restoreObject(array $args = [])
 * @method Promise restoreObjectAsync(array $args = [])
 * @method Result selectObjectContent(array $args = [])
 * @method Promise selectObjectContentAsync(array $args = [])
 * @method Result uploadPart(array $args = [])
 * @method Promise uploadPartAsync(array $args = [])
 * @method Result uploadPartCopy(array $args = [])
 * @method Promise uploadPartCopyAsync(array $args = [])
 * @method Result writeGetObjectResponse(array $args = [])
 * @method Promise writeGetObjectResponseAsync(array $args = [])
 */
class S3Template {

    public function __construct(protected S3Client $s3Client) {
    }

    public function __call(string $name, array $arguments): mixed {
        return $this->s3Client->$name(...$arguments);
    }

    public function getGetObjectRequest(array $args): RequestInterface {
        $cmd = $this->s3Client->getCommand('getObject', $args);

        return \Aws\serialize($cmd);
    }

}